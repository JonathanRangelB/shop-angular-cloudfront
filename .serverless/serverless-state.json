{
  "service": {
    "service": "shop-angular-cloudfront",
    "serviceObject": {
      "name": "shop-angular-cloudfront"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs16.x",
      "stage": "dev",
      "region": "us-east-2",
      "environment": {
        "PRODUCTS_TABLE": "products",
        "STOCKS_TABLE": "stocks"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Resource": "arn:aws:dynamodb:us-east-2:904597884993:table/products"
            },
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Resource": "arn:aws:dynamodb:us-east-2:904597884993:table/stocks"
            }
          ]
        }
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "GetProductsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/shop-angular-cloudfront-dev-getProducts"
            }
          },
          "GetProductByIdLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/shop-angular-cloudfront-dev-getProductById"
            }
          },
          "CreateProductLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/shop-angular-cloudfront-dev-createProduct"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": ["lambda.amazonaws.com"]
                    },
                    "Action": ["sts:AssumeRole"]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      ["shop-angular-cloudfront", "dev", "lambda"]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/shop-angular-cloudfront-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": ["logs:PutLogEvents"],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/shop-angular-cloudfront-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Deny",
                        "Action": "logs:PutLogEvents",
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/shop-angular-cloudfront-dev-swagger-ui:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/shop-angular-cloudfront-dev-swagger-json:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][1]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "shop-angular-cloudfront",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "GetProductsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/shop-angular-cloudfront/dev/1684133993120-2023-05-15T06:59:53.120Z/shop-angular-cloudfront.zip"
              },
              "Handler": "src/lambdas/getProducts.handler",
              "Runtime": "nodejs16.x",
              "FunctionName": "shop-angular-cloudfront-dev-getProducts",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PRODUCTS_TABLE": "products",
                  "STOCKS_TABLE": "stocks"
                }
              },
              "Role": {
                "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"]
              }
            },
            "DependsOn": ["GetProductsLogGroup"]
          },
          "GetProductByIdLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/shop-angular-cloudfront/dev/1684133993120-2023-05-15T06:59:53.120Z/shop-angular-cloudfront.zip"
              },
              "Handler": "src/lambdas/getProductById.handler",
              "Runtime": "nodejs16.x",
              "FunctionName": "shop-angular-cloudfront-dev-getProductById",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PRODUCTS_TABLE": "products",
                  "STOCKS_TABLE": "stocks"
                }
              },
              "Role": {
                "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"]
              }
            },
            "DependsOn": ["GetProductByIdLogGroup"]
          },
          "CreateProductLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/shop-angular-cloudfront/dev/1684133993120-2023-05-15T06:59:53.120Z/shop-angular-cloudfront.zip"
              },
              "Handler": "src/lambdas/createProduct.handler",
              "Runtime": "nodejs16.x",
              "FunctionName": "shop-angular-cloudfront-dev-createProduct",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PRODUCTS_TABLE": "products",
                  "STOCKS_TABLE": "stocks"
                }
              },
              "Role": {
                "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"]
              }
            },
            "DependsOn": ["CreateProductLogGroup"]
          },
          "SwaggerUILambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/shop-angular-cloudfront/dev/1684133993120-2023-05-15T06:59:53.120Z/shop-angular-cloudfront.zip"
              },
              "Handler": "swagger/swagger-html.handler",
              "Runtime": "nodejs16.x",
              "FunctionName": "shop-angular-cloudfront-dev-swagger-ui",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PRODUCTS_TABLE": "products",
                  "STOCKS_TABLE": "stocks"
                }
              },
              "Role": {
                "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"]
              }
            }
          },
          "SwaggerJSONLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/shop-angular-cloudfront/dev/1684133993120-2023-05-15T06:59:53.120Z/shop-angular-cloudfront.zip"
              },
              "Handler": "swagger/swagger-json.handler",
              "Runtime": "nodejs16.x",
              "FunctionName": "shop-angular-cloudfront-dev-swagger-json",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PRODUCTS_TABLE": "products",
                  "STOCKS_TABLE": "stocks"
                }
              },
              "Role": {
                "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"]
              }
            }
          },
          "GetProductsLambdaVersionXWLbK5GX6r40VEV4c1ZMjhj1o5CX5tmEB2GztjRg98": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetProductsLambdaFunction"
              },
              "CodeSha256": "ObsdY/Yf87RYXVpCLy1/3oH8V5N7kBp5ULhHyeOvq7E="
            }
          },
          "GetProductByIdLambdaVersionh5BtHgFRWGqLGNhhRgouiTgt686R4csvexVsI31pes": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetProductByIdLambdaFunction"
              },
              "CodeSha256": "ObsdY/Yf87RYXVpCLy1/3oH8V5N7kBp5ULhHyeOvq7E="
            }
          },
          "CreateProductLambdaVersionRROptRyT75sZrLAa7Gh9aTu2wKAmQ5HXnSqkOJVJo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateProductLambdaFunction"
              },
              "CodeSha256": "ObsdY/Yf87RYXVpCLy1/3oH8V5N7kBp5ULhHyeOvq7E="
            }
          },
          "SwaggerUILambdaVersiong4qQcYJV4jbhz6izMfaSUjvdP5SxdH4aWoSX2vgM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SwaggerUILambdaFunction"
              },
              "CodeSha256": "ObsdY/Yf87RYXVpCLy1/3oH8V5N7kBp5ULhHyeOvq7E="
            }
          },
          "SwaggerJSONLambdaVersion2QOiPRPmtTfAt1tCYIXcpbKuUPbqwC3N4EZxIG6NSDQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SwaggerJSONLambdaFunction"
              },
              "CodeSha256": "ObsdY/Yf87RYXVpCLy1/3oH8V5N7kBp5ULhHyeOvq7E="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-shop-angular-cloudfront",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "GetProductsLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": ["GetProductsLambdaFunction", "Arn"]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetProducts": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetProductsLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetProducts": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /products",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetProducts"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetProducts"
          },
          "GetProductByIdLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": ["GetProductByIdLambdaFunction", "Arn"]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetProductById": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetProductByIdLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetProductsProductidVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /products/{productId}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetProductById"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetProductById"
          },
          "CreateProductLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": ["CreateProductLambdaFunction", "Arn"]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationCreateProduct": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateProductLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostProducts": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /products",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationCreateProduct"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationCreateProduct"
          },
          "SwaggerUILambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": ["SwaggerUILambdaFunction", "Arn"]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationSwaggerUI": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"SwaggerUILambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetSwagger": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /swagger",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationSwaggerUI"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationSwaggerUI"
          },
          "SwaggerJSONLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": ["SwaggerJSONLambdaFunction", "Arn"]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationSwaggerJSON": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"SwaggerJSONLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetSwaggerjson": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /swagger.json",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationSwaggerJSON"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationSwaggerJSON"
          },
          "WebAppS3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "shop-angular-cloudfront3850",
              "AccessControl": "BucketOwnerFullControl",
              "WebsiteConfiguration": {
                "IndexDocument": "index.html",
                "ErrorDocument": "index.html"
              }
            }
          },
          "WebAppS3BucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "WebAppS3Bucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Sid": "AllowCloudFrontAccessIdentity",
                    "Effect": "Allow",
                    "Action": "s3:GetObject",
                    "Resource": "arn:aws:s3:::shop-angular-cloudfront3850/*",
                    "Principal": {
                      "AWS": {
                        "Fn::Join": [
                          " ",
                          [
                            "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity",
                            {
                              "Ref": "OriginAccessIdentity"
                            }
                          ]
                        ]
                      }
                    }
                  }
                ]
              }
            }
          },
          "OriginAccessIdentity": {
            "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
            "Properties": {
              "CloudFrontOriginAccessIdentityConfig": {
                "Comment": "Access identity between CloudFront and S3 bucket"
              }
            }
          },
          "WebAppCloudFrontDistribution": {
            "Type": "AWS::CloudFront::Distribution",
            "Properties": {
              "DistributionConfig": {
                "Origins": [
                  {
                    "DomainName": "shop-angular-cloudfront3850.s3.amazonaws.com",
                    "Id": "myS3Origin",
                    "S3OriginConfig": {
                      "OriginAccessIdentity": {
                        "Fn::Sub": "origin-access-identity/cloudfront/${OriginAccessIdentity}"
                      }
                    }
                  }
                ],
                "Enabled": true,
                "IPV6Enabled": true,
                "HttpVersion": "http2",
                "DefaultRootObject": "index.html",
                "CustomErrorResponses": [
                  {
                    "ErrorCode": 404,
                    "ResponseCode": 200,
                    "ResponsePagePath": "/index.html"
                  }
                ],
                "DefaultCacheBehavior": {
                  "AllowedMethods": ["GET", "HEAD", "OPTIONS"],
                  "CachedMethods": ["GET", "HEAD", "OPTIONS"],
                  "ForwardedValues": {
                    "Headers": [
                      "Access-Control-Request-Headers",
                      "Access-Control-Request-Method",
                      "Origin",
                      "Authorization"
                    ],
                    "QueryString": false,
                    "Cookies": {
                      "Forward": "none"
                    }
                  },
                  "TargetOriginId": "myS3Origin",
                  "ViewerProtocolPolicy": "redirect-to-https",
                  "Compress": true,
                  "DefaultTTL": 0
                },
                "ViewerCertificate": {
                  "CloudFrontDefaultCertificate": "true"
                }
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-shop-angular-cloudfront-dev-ServerlessDeploymentBucketName"
            }
          },
          "GetProductsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetProductsLambdaVersionXWLbK5GX6r40VEV4c1ZMjhj1o5CX5tmEB2GztjRg98"
            },
            "Export": {
              "Name": "sls-shop-angular-cloudfront-dev-GetProductsLambdaFunctionQualifiedArn"
            }
          },
          "GetProductByIdLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetProductByIdLambdaVersionh5BtHgFRWGqLGNhhRgouiTgt686R4csvexVsI31pes"
            },
            "Export": {
              "Name": "sls-shop-angular-cloudfront-dev-GetProductByIdLambdaFunctionQualifiedArn"
            }
          },
          "CreateProductLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateProductLambdaVersionRROptRyT75sZrLAa7Gh9aTu2wKAmQ5HXnSqkOJVJo"
            },
            "Export": {
              "Name": "sls-shop-angular-cloudfront-dev-CreateProductLambdaFunctionQualifiedArn"
            }
          },
          "SwaggerUILambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SwaggerUILambdaVersiong4qQcYJV4jbhz6izMfaSUjvdP5SxdH4aWoSX2vgM"
            },
            "Export": {
              "Name": "sls-shop-angular-cloudfront-dev-SwaggerUILambdaFunctionQualifiedArn"
            }
          },
          "SwaggerJSONLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SwaggerJSONLambdaVersion2QOiPRPmtTfAt1tCYIXcpbKuUPbqwC3N4EZxIG6NSDQ"
            },
            "Export": {
              "Name": "sls-shop-angular-cloudfront-dev-SwaggerJSONLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-shop-angular-cloudfront-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-shop-angular-cloudfront-dev-HttpApiUrl"
            }
          },
          "WebAppS3BucketOutput": {
            "Value": {
              "Ref": "WebAppS3Bucket"
            }
          },
          "WebAppCloudFrontDistributionOutput": {
            "Value": {
              "Fn::GetAtt": ["WebAppCloudFrontDistribution", "DomainName"]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "client": {
        "bucketName": "shop-angular-cloudfront3850",
        "distributionFolder": "dist/app",
        "indexDocument": "index.html",
        "manageResources": false
      },
      "s3LocalPath": "dist/app/",
      "s3BucketName": "shop-angular-cloudfront3850"
    },
    "plugins": [
      "serverless-auto-swagger",
      "serverless-finch",
      "serverless-single-page-app-plugin"
    ],
    "pluginsData": {},
    "functions": {
      "getProducts": {
        "handler": "src/lambdas/getProducts.handler",
        "events": [
          {
            "httpApi": {
              "path": "/products",
              "method": "get",
              "summary": "Get all products"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/products"
          }
        ],
        "name": "shop-angular-cloudfront-dev-getProducts",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs16.x",
        "vpc": {},
        "versionLogicalId": "GetProductsLambdaVersionXWLbK5GX6r40VEV4c1ZMjhj1o5CX5tmEB2GztjRg98"
      },
      "getProductById": {
        "handler": "src/lambdas/getProductById.handler",
        "events": [
          {
            "httpApi": {
              "path": "/products/{productId}",
              "method": "get",
              "summary": "Get one product by his ID"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/products/{productId}"
          }
        ],
        "name": "shop-angular-cloudfront-dev-getProductById",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs16.x",
        "vpc": {},
        "versionLogicalId": "GetProductByIdLambdaVersionh5BtHgFRWGqLGNhhRgouiTgt686R4csvexVsI31pes"
      },
      "createProduct": {
        "handler": "src/lambdas/createProduct.handler",
        "events": [
          {
            "httpApi": {
              "path": "/products",
              "method": "post",
              "summary": "Saves product item into DB"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/products"
          }
        ],
        "name": "shop-angular-cloudfront-dev-createProduct",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs16.x",
        "vpc": {},
        "versionLogicalId": "CreateProductLambdaVersionRROptRyT75sZrLAa7Gh9aTu2wKAmQ5HXnSqkOJVJo"
      },
      "swaggerUI": {
        "name": "shop-angular-cloudfront-dev-swagger-ui",
        "handler": "swagger/swagger-html.handler",
        "disableLogs": true,
        "events": [
          {
            "httpApi": {
              "method": "get",
              "path": "/swagger"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/swagger"
          }
        ],
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs16.x",
        "vpc": {},
        "versionLogicalId": "SwaggerUILambdaVersiong4qQcYJV4jbhz6izMfaSUjvdP5SxdH4aWoSX2vgM"
      },
      "swaggerJSON": {
        "name": "shop-angular-cloudfront-dev-swagger-json",
        "handler": "swagger/swagger-json.handler",
        "disableLogs": true,
        "events": [
          {
            "httpApi": {
              "method": "get",
              "path": "/swagger.json"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/swagger.json"
          }
        ],
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs16.x",
        "vpc": {},
        "versionLogicalId": "SwaggerJSONLambdaVersion2QOiPRPmtTfAt1tCYIXcpbKuUPbqwC3N4EZxIG6NSDQ"
      }
    },
    "resources": {
      "Resources": {
        "WebAppS3Bucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "shop-angular-cloudfront3850",
            "AccessControl": "BucketOwnerFullControl",
            "WebsiteConfiguration": {
              "IndexDocument": "index.html",
              "ErrorDocument": "index.html"
            }
          }
        },
        "WebAppS3BucketPolicy": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "Bucket": {
              "Ref": "WebAppS3Bucket"
            },
            "PolicyDocument": {
              "Statement": [
                {
                  "Sid": "AllowCloudFrontAccessIdentity",
                  "Effect": "Allow",
                  "Action": "s3:GetObject",
                  "Resource": "arn:aws:s3:::shop-angular-cloudfront3850/*",
                  "Principal": {
                    "AWS": {
                      "Fn::Join": [
                        " ",
                        [
                          "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity",
                          {
                            "Ref": "OriginAccessIdentity"
                          }
                        ]
                      ]
                    }
                  }
                }
              ]
            }
          }
        },
        "OriginAccessIdentity": {
          "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
          "Properties": {
            "CloudFrontOriginAccessIdentityConfig": {
              "Comment": "Access identity between CloudFront and S3 bucket"
            }
          }
        },
        "WebAppCloudFrontDistribution": {
          "Type": "AWS::CloudFront::Distribution",
          "Properties": {
            "DistributionConfig": {
              "Origins": [
                {
                  "DomainName": "shop-angular-cloudfront3850.s3.amazonaws.com",
                  "Id": "myS3Origin",
                  "S3OriginConfig": {
                    "OriginAccessIdentity": {
                      "Fn::Sub": "origin-access-identity/cloudfront/${OriginAccessIdentity}"
                    }
                  }
                }
              ],
              "Enabled": true,
              "IPV6Enabled": true,
              "HttpVersion": "http2",
              "DefaultRootObject": "index.html",
              "CustomErrorResponses": [
                {
                  "ErrorCode": 404,
                  "ResponseCode": 200,
                  "ResponsePagePath": "/index.html"
                }
              ],
              "DefaultCacheBehavior": {
                "AllowedMethods": ["GET", "HEAD", "OPTIONS"],
                "CachedMethods": ["GET", "HEAD", "OPTIONS"],
                "ForwardedValues": {
                  "Headers": [
                    "Access-Control-Request-Headers",
                    "Access-Control-Request-Method",
                    "Origin",
                    "Authorization"
                  ],
                  "QueryString": false,
                  "Cookies": {
                    "Forward": "none"
                  }
                },
                "TargetOriginId": "myS3Origin",
                "ViewerProtocolPolicy": "redirect-to-https",
                "Compress": true,
                "DefaultTTL": 0
              },
              "ViewerCertificate": {
                "CloudFrontDefaultCertificate": "true"
              }
            }
          }
        }
      },
      "Outputs": {
        "WebAppS3BucketOutput": {
          "Value": {
            "Ref": "WebAppS3Bucket"
          }
        },
        "WebAppCloudFrontDistributionOutput": {
          "Value": {
            "Fn::GetAtt": ["WebAppCloudFrontDistribution", "DomainName"]
          }
        }
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "shop-angular-cloudfront",
      "frameworkVersion": "3",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "package": {
        "include": ["dist/**"],
        "exclude": [
          "node_modules/**",
          "e2e/**",
          "etc/**",
          ".git/**",
          ".vscode/**",
          ".husky/**",
          ".angular/**"
        ],
        "artifactsS3KeyDirname": "serverless/shop-angular-cloudfront/dev/code-artifacts",
        "artifact": "C:\\Users\\Jonathan_Rangel\\Desktop\\angular\\shop-angular-cloudfront\\.serverless\\shop-angular-cloudfront.zip",
        "artifactDirectoryName": "serverless/shop-angular-cloudfront/dev/1684133993120-2023-05-15T06:59:53.120Z"
      },
      "functions": {
        "getProducts": {
          "$ref": "$[\"service\"][\"functions\"][\"getProducts\"]"
        },
        "getProductById": {
          "$ref": "$[\"service\"][\"functions\"][\"getProductById\"]"
        },
        "createProduct": {
          "$ref": "$[\"service\"][\"functions\"][\"createProduct\"]"
        }
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "C:\\Users\\Jonathan_Rangel\\Desktop\\angular\\shop-angular-cloudfront\\.serverless\\shop-angular-cloudfront.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/shop-angular-cloudfront/dev/1684133993120-2023-05-15T06:59:53.120Z",
    "artifact": "shop-angular-cloudfront.zip"
  }
}
